plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.4.RELEASE'
}

group 'com.csu.hello'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

def JUNIT5_API_VERSION = '5.3.0'
def JUNIT5_PLATFORM_VERSION = '1.3.0'

ext.libs = [
        junit4: [
                'junit:junit:4.12',
                'org.mockito:mockito-core:2.19.0'
        ],
        junit5: [
                "org.junit.jupiter:junit-jupiter-api:${JUNIT5_API_VERSION}",
                "org.junit.jupiter:junit-jupiter-engine:${JUNIT5_API_VERSION}",
                "org.junit.vintage:junit-vintage-engine:${JUNIT5_API_VERSION}",
                "org.junit.jupiter:junit-jupiter-params:${JUNIT5_API_VERSION}",
                "org.junit.platform:junit-platform-launcher:${JUNIT5_PLATFORM_VERSION}",
                "org.junit.platform:junit-platform-runner:${JUNIT5_PLATFORM_VERSION}",
                'org.mockito:mockito-junit-jupiter:2.17.0'
        ]
]

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        afterSuite { desc, result ->
            if (!desc.parent) {
                def output = " Result: ${result.resultType} " +
                        "(${result.testCount} Tests, " +
                        "${result.successfulTestCount} Successes, " +
                        "${result.failedTestCount} Failures, " +
                        "${result.skippedTestCount} Skipped) "
                println('\n' + ('-' * output.length()) + '\n' + output + '\n' + ('-' * output.length()))
            }
        }
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")

    testCompile("org.springframework.boot:spring-boot-starter-test")

    testCompile libs.junit5

    testCompile group: 'io.rest-assured', name: 'spring-mock-mvc', version: '3.3.0'
}
